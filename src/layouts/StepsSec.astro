---
import Title from "../components/Title.astro";
import StepCard from "../components/StepCard.astro";

const { stepsList } = Astro.props;
---

<section
  id="steps"
  x-data="{ currentStep: 0, stepCardWidth: $refs.stepCard.offsetWidth }"
  x-on:resize.window.debounce="() => stepCardWidth = $refs.stepCard.offsetWidth"
  class="flex flex-col items-center w-full py-12 bg-slate-900 md:py-16"
>
  <div class="flex flex-col items-center w-full gap-x-8">
    <Title text="Etapy DziaÅ‚ania" />
    <div
      id="slider"
      x-on:scroll.debounce.50ms="currentStep = Math.round($el.scrollLeft / stepCardWidth)"
      x-effect="$el.scroll({left: currentStep * stepCardWidth, behavior: 'smooth'})"
      class="w-full items-start mb-8 paddings lg:px-[max(calc((100vw-1152px)/2),theme(spacing.8))] snap-x snap-mandatory overflow-x-scroll overscroll-x-contain scroll-px-6 md:scroll-px-12 lg:scroll-px-[max(calc((100vw-1152px)/2),theme(spacing.8))]"
    >
      <ul class="grid grid-flow-col w-max gap-4 md:gap-8">
        {
          stepsList?.map((_step) => (
            <StepCard
              title={_step.title}
              desc={_step.desc}
              image={_step.image}
            />
          ))
        }
      </ul>
    </div>
    <div class="flex flex-row gap-6 items-center">
      <button x-on:click="currentStep > 0 ? currentStep-- : undefined">
        <img src="/arrow.svg" alt="" class="rotate-180" />
      </button>
      <h5
        class="text-slate-600 w-12 text-center"
        x-text=`currentStep + 1 +"${" z " + stepsList.length}"`
      >
      </h5>
      <button
        x-on:click=`currentStep < ${stepsList.length - 1} ? currentStep++ : undefined`
      >
        <img src="/arrow.svg" alt="" />
      </button>
    </div>
  </div>
</section>
